{
  "address": "0x3de937BAD8052f9647f42C9732f1Af9c83D4F781",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithrawFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToFundersAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x36d211d774e8b924f324dbd5aa4ad1e4e784f2572dd00e048ca5622d61e876a7",
  "receipt": {
    "to": null,
    "from": "0xFDE43C3F19080177B4b39fdf873a3680Fe8264B8",
    "contractAddress": "0x3de937BAD8052f9647f42C9732f1Af9c83D4F781",
    "transactionIndex": 59,
    "gasUsed": "973625",
    "logsBloom": "0x
    "blockHash": "0xc1842f57a5b0aa0707d84b84e5db81e31514d6695ac061682cbb105aebecf190",
    "transactionHash": "0x36d211d774e8b924f324dbd5aa4ad1e4e784f2572dd00e048ca5622d61e876a7",
    "logs": [],
    "blockNumber": 7723200,
    "cumulativeGasUsed": "13577762",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "1aff6746a1d7ac92c5bff19a890129c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithrawFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToFundersAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Ayomide \",\"details\":\"This implement price feeds  as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implement price feeds  as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor recieve fallback external public internal private view / pure\"},\"fund()\":{\"notice\":\"This functions is use to fund the contract/address\"}},\"notice\":\"This contract is to demo a  sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Ayomide \\n * @notice This contract is to demo a  sample funding contract\\n * @dev This implement price feeds  as our library\\n */\\n\\ncontract FundMe {\\n\\n    // Type Declaration\\n    using PriceConverter for uint256;\\n\\n    // State variables \\n    uint256 public constant MINIMUM_AMOUNT = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToFundersAmount;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Modifiers\\n    modifier onlyOwner {\\n        if(msg.sender != i_owner){ revert FundMe__NotOwner();}\\n        _; //\\n    }\\n\\n    // Functions format\\n    /**\\n     * constructor\\n     * recieve\\n     * fallback\\n     * external\\n     * public\\n     * internal\\n     * private\\n     * view / pure\\n     */\\n\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress); \\n    }\\n\\n    receive () external  payable {\\n        fund();\\n    }\\n\\n    fallback () external payable {\\n        fund();   \\n    }\\n\\n    /**\\n     * @notice This functions is use to fund the contract/address\\n     * @dev This implement price feeds  as our library\\n    */\\n\\n    function fund () public payable {\\n        require(msg.value.getConvertionRate(s_priceFeed) >= MINIMUM_AMOUNT, \\\"Error: Didn't send fund\\\");\\n        s_addressToFundersAmount[msg.sender] = msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdrawFund() public payable onlyOwner {\\n        for(uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToFundersAmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    // this is cheaper, saving into memory first makes it cheaper so we can easi ly loop through without visiting storage\\n    function cheaperWithrawFund() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mapping can't be stored in memory\\n\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToFundersAmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    // pure / view \\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    } \\n\\n    function getFunders(uint256 index) public view returns (address){\\n        return s_funders[index]; \\n    }\\n\\n    function getAddressToFundersAmount(address funder) public view returns (uint256){\\n         return s_addressToFundersAmount[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\n        return s_priceFeed ; \\n    }\\n\\n\\n\\n}\",\"keccak256\":\"0x7f1ab5e80954e2589a24903769e9087f0c0be9c535fb97d67f6e88f20e6640ad\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256){\\n        // Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e); \\n        (, int256 price, , ,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10); // 1 * 10 == 100000000\\n    }\\n \\n    function getConvertionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // 1eth will return 3000_000000000000000000\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 10e18;\\n        return ethAmountInUsd;\\n    }\\n} \",\"keccak256\":\"0xbd14d5140ab267f70a8012d61dbc464fc50af37b99b6b407d87dae827b11d258\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011b7380380620011b783398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161103e62000179600039600081816102dc0152818161061f015261066f015261103e6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063e07fa3c1146101a75761008e565b80630508899514610098578063257d9bb8146100a25780633a7b6c74146100cd57806371f176b31461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102da565b005b3480156100ae57600080fd5b506100b761057e565b6040516100c49190610a3a565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef9190610a86565b61058b565b6040516101019190610af4565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c9190610b3b565b6105d2565b60405161013e9190610a3a565b60405180910390f35b34801561015357600080fd5b5061015c61061b565b6040516101699190610af4565b60405180910390f35b34801561017e57600080fd5b50610187610643565b6040516101949190610bc7565b60405180910390f35b6101a56101b1565b005b6101af61066d565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ad90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c3f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610398575b5050505050905060005b815181101561046d57600082828151811061040a57610409610c5f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cbd565b9150506103ec565b50600067ffffffffffffffff81111561048957610488610d05565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd92919061097a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f490610d65565b60006040518083038185875af1925050503d8060008114610531576040519150601f19603f3d011682016040523d82523d6000602084013e610536565b606091505b505090508061057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610dc6565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60008082815481106105a05761059f610c5f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561079d57600080828154811061071757610716610c5f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079590610cbd565b9150506106f5565b50600067ffffffffffffffff8111156107b9576107b8610d05565b5b6040519080825280602002602001820160405280156107e75781602001602082028036833780820191505090505b50600090805190602001906107fd92919061097a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161082490610d65565b60006040518083038185875af1925050503d8060008114610861576040519150601f19603f3d011682016040523d82523d6000602084013e610866565b606091505b50509050806108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a190610dc6565b60405180910390fd5b50565b6000806108b9836108e9565b90506000678ac7230489e8000085836108d29190610de6565b6108dc9190610e57565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190610f15565b5050509150506402540be400816109729190610f90565b915050919050565b8280548282559060005260206000209081019282156109f3579160200282015b828111156109f25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099a565b5b509050610a009190610a04565b5090565b5b80821115610a1d576000816000905550600101610a05565b5090565b6000819050919050565b610a3481610a21565b82525050565b6000602082019050610a4f6000830184610a2b565b92915050565b600080fd5b610a6381610a21565b8114610a6e57600080fd5b50565b600081359050610a8081610a5a565b92915050565b600060208284031215610a9c57610a9b610a55565b5b6000610aaa84828501610a71565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ade82610ab3565b9050919050565b610aee81610ad3565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b610b1881610ad3565b8114610b2357600080fd5b50565b600081359050610b3581610b0f565b92915050565b600060208284031215610b5157610b50610a55565b5b6000610b5f84828501610b26565b91505092915050565b6000819050919050565b6000610b8d610b88610b8384610ab3565b610b68565b610ab3565b9050919050565b6000610b9f82610b72565b9050919050565b6000610bb182610b94565b9050919050565b610bc181610ba6565b82525050565b6000602082019050610bdc6000830184610bb8565b92915050565b600082825260208201905092915050565b7f4572726f723a204469646e27742073656e642066756e64000000000000000000600082015250565b6000610c29601783610be2565b9150610c3482610bf3565b602082019050919050565b60006020820190508181036000830152610c5881610c1c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc882610a21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cfa57610cf9610c8e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4f600083610d34565b9150610d5a82610d3f565b600082019050919050565b6000610d7082610d42565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610db0600b83610be2565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000610df182610a21565b9150610dfc83610a21565b9250828202610e0a81610a21565b91508282048414831517610e2157610e20610c8e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6282610a21565b9150610e6d83610a21565b925082610e7d57610e7c610e28565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea781610e88565b8114610eb257600080fd5b50565b600081519050610ec481610e9e565b92915050565b6000819050919050565b610edd81610eca565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600081519050610f0f81610a5a565b92915050565b600080600080600060a08688031215610f3157610f30610a55565b5b6000610f3f88828901610eb5565b9550506020610f5088828901610eeb565b9450506040610f6188828901610f00565b9350506060610f7288828901610f00565b9250506080610f8388828901610eb5565b9150509295509295909350565b6000610f9b82610eca565b9150610fa683610eca565b9250828202610fb481610eca565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fec57610feb610c8e565b5b828205841483151761100157611000610c8e565b5b509291505056fea264697066735822122079d6099c29b2be16ffcde33bb5e5f16f3e86eebe7c5668ebc53d3b1c235f5ab964736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063e07fa3c1146101a75761008e565b80630508899514610098578063257d9bb8146100a25780633a7b6c74146100cd57806371f176b31461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102da565b005b3480156100ae57600080fd5b506100b761057e565b6040516100c49190610a3a565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef9190610a86565b61058b565b6040516101019190610af4565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c9190610b3b565b6105d2565b60405161013e9190610a3a565b60405180910390f35b34801561015357600080fd5b5061015c61061b565b6040516101699190610af4565b60405180910390f35b34801561017e57600080fd5b50610187610643565b6040516101949190610bc7565b60405180910390f35b6101a56101b1565b005b6101af61066d565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ad90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c3f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610398575b5050505050905060005b815181101561046d57600082828151811061040a57610409610c5f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cbd565b9150506103ec565b50600067ffffffffffffffff81111561048957610488610d05565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd92919061097a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f490610d65565b60006040518083038185875af1925050503d8060008114610531576040519150601f19603f3d011682016040523d82523d6000602084013e610536565b606091505b505090508061057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610dc6565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60008082815481106105a05761059f610c5f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561079d57600080828154811061071757610716610c5f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079590610cbd565b9150506106f5565b50600067ffffffffffffffff8111156107b9576107b8610d05565b5b6040519080825280602002602001820160405280156107e75781602001602082028036833780820191505090505b50600090805190602001906107fd92919061097a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161082490610d65565b60006040518083038185875af1925050503d8060008114610861576040519150601f19603f3d011682016040523d82523d6000602084013e610866565b606091505b50509050806108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a190610dc6565b60405180910390fd5b50565b6000806108b9836108e9565b90506000678ac7230489e8000085836108d29190610de6565b6108dc9190610e57565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190610f15565b5050509150506402540be400816109729190610f90565b915050919050565b8280548282559060005260206000209081019282156109f3579160200282015b828111156109f25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099a565b5b509050610a009190610a04565b5090565b5b80821115610a1d576000816000905550600101610a05565b5090565b6000819050919050565b610a3481610a21565b82525050565b6000602082019050610a4f6000830184610a2b565b92915050565b600080fd5b610a6381610a21565b8114610a6e57600080fd5b50565b600081359050610a8081610a5a565b92915050565b600060208284031215610a9c57610a9b610a55565b5b6000610aaa84828501610a71565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ade82610ab3565b9050919050565b610aee81610ad3565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b610b1881610ad3565b8114610b2357600080fd5b50565b600081359050610b3581610b0f565b92915050565b600060208284031215610b5157610b50610a55565b5b6000610b5f84828501610b26565b91505092915050565b6000819050919050565b6000610b8d610b88610b8384610ab3565b610b68565b610ab3565b9050919050565b6000610b9f82610b72565b9050919050565b6000610bb182610b94565b9050919050565b610bc181610ba6565b82525050565b6000602082019050610bdc6000830184610bb8565b92915050565b600082825260208201905092915050565b7f4572726f723a204469646e27742073656e642066756e64000000000000000000600082015250565b6000610c29601783610be2565b9150610c3482610bf3565b602082019050919050565b60006020820190508181036000830152610c5881610c1c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc882610a21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cfa57610cf9610c8e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d4f600083610d34565b9150610d5a82610d3f565b600082019050919050565b6000610d7082610d42565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610db0600b83610be2565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000610df182610a21565b9150610dfc83610a21565b9250828202610e0a81610a21565b91508282048414831517610e2157610e20610c8e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6282610a21565b9150610e6d83610a21565b925082610e7d57610e7c610e28565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ea781610e88565b8114610eb257600080fd5b50565b600081519050610ec481610e9e565b92915050565b6000819050919050565b610edd81610eca565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600081519050610f0f81610a5a565b92915050565b600080600080600060a08688031215610f3157610f30610a55565b5b6000610f3f88828901610eb5565b9550506020610f5088828901610eeb565b9450506040610f6188828901610f00565b9350506060610f7288828901610f00565b9250506080610f8388828901610eb5565b9150509295509295909350565b6000610f9b82610eca565b9150610fa683610eca565b9250828202610fb481610eca565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fec57610feb610c8e565b5b828205841483151761100157611000610c8e565b5b509291505056fea264697066735822122079d6099c29b2be16ffcde33bb5e5f16f3e86eebe7c5668ebc53d3b1c235f5ab964736f6c63430008110033",
  "devdoc": {
    "author": "Ayomide ",
    "details": "This implement price feeds  as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implement price feeds  as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor recieve fallback external public internal private view / pure"
      },
      "fund()": {
        "notice": "This functions is use to fund the contract/address"
      }
    },
    "notice": "This contract is to demo a  sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToFundersAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}